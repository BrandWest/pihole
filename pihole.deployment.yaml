apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: pihole
  name: pihole
  labels:
    app: pihole
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pihole
    spec:
      hostNetwork: true
      containers:
      - env:
        - name: ServerIP
          value: 10.0.0.204
        - name: WEBPASSWORD 
          valueFrom:
            secretKeyRef:
              name: pihole-secret
              key: password 
        - name: DNS1
          value: 127.0.0.1
        - name: DNS2
          value: 1.1.1.1
        - name: TZ
          value: UTC
        image: pihole/pihole@sha256:0def896a596e8d45780b6359dbf82fc8c75ef05b97e095452e67a0a4ccc95377
        imagePullPolicy: IfNotPresent
        name: pihole
        ports: 
        - containerPort: 80
          name: pihole-http
          protocol: TCP
        - containerPort: 53
          name: pihole-tcp-dns
          protocol: TCP
        - containerPort: 53
          name: pihole-udp-dns
          protocol: UDP
        - containerPort: 443
          name: pihole-ssl
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /admin/index.php
            port: pihole-http
            scheme: HTTP
          initialDelaySeconds: 60
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /admin/index.php
            port: pihole-http
            scheme: HTTP
          initialDelaySeconds: 60
          failureThreshold: 10
          timeoutSeconds: 5          
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: "/etc/pihole"
          name: pihole-storage
        - mountPath: "/etc/dnsmasq.d/02-custom.conf"
          name: pihole-dnsmasq
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: pihole-storage
        persistentVolumeClaim:
          claimName: pihole.storage.pvc
      - name: pihole-dnsmasq
        persistentVolumeClaim:  
          claimName: pihole.storage.dnsmasq.pvc